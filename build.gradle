apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

group = 'se.zensum'
version = '1.0-SNAPSHOT'
description = 'description of project'

defaultTasks 'run'

task run(type: JavaExec) {
    main = 'se.zensum.KotlinMainClassKt' //Important that 'Kt' is appended to class name
    classpath = sourceSets.main.runtimeClasspath
}

buildscript {
    ext.kotlin_version = '1.1.3'
    ext.jvm_version = '1.8'
    ext.junit_platform_version = '1.0.0-M4'
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junit_platform_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.0'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: "org.junit.platform.gradle.plugin"
apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-jdk8', version: '0.14'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '0.14'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0-M4'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.0-M4'
}

junitPlatform {
    platformVersion = junit_platform_version
}

jar {
    manifest {
        attributes 'Main-Class': "se.zensum.KotlinMainClassKt"
    }
}

shadowJar {
    baseName = 'shadow'
    classifier = null
    version = null
}

repositories {
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "http://jcenter.bintray.com" }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
}

compileKotlin {
    sourceCompatibility = jvm_version
    kotlinOptions {
        jvmTarget = jvm_version
    }
}

compileJava {
    sourceCompatibility = jvm_version
    targetCompatibility = jvm_version
    options.incremental = true
    options.encoding = 'UTF-8'
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

// Important: All classes containing test cases must match the
// the regex pattern "^.*Tests?$" to be picked up by the junit-gradle plugin.
sourceSets {
    main.resources.srcDirs += 'src/main/resources'
    main.kotlin.srcDirs += 'src/main/kotlin'
    test.kotlin.srcDirs += 'src/test/kotlin'
    main.java.srcDirs += 'src/main/java'
    test.java.srcDirs += 'src/test/java'
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts for faster execution'
    gradleVersion = '4.0'
}
